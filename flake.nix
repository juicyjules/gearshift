# flake.nix
{
  description = "A Vite React app packaged with Nix Flakes";

  # Define the external dependencies (inputs) for our project
  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };

  # Define the outputs of our flake (packages, shells, etc.)
  outputs = { self, nixpkgs, flake-utils }:
    # Use flake-utils to generate outputs for common systems (linux, macos)
    flake-utils.lib.eachDefaultSystem (system:
      let
        # Import nixpkgs for the specific system
        pkgs = import nixpkgs { inherit system; };

        # Import the dependencies generated by node2nix
        nodeDependencies = pkgs.callPackage ./default.nix {};
      in
      {
        # The package to be built, accessible via `nix build`
        packages.default = pkgs.stdenv.mkDerivation {
          pname = "gearshift";
          version = "1.0.0";

          # The source is the current flake's directory
          src = self;

          # Dependencies needed during the build
          buildInputs = [ pkgs.nodejs pkgs.nodePackages.node2nix pkgs.openssl];

          # Environment setup for the build shell
          shellHook = ''
            export PATH="${nodeDependencies.nodeDependencies}/bin:$PATH"
            export NODE_PATH="${nodeDependencies.nodeDependencies}/lib/node_modules:$NODE_PATH"
          '';

          # Phase 1: Build the static assets
          buildPhase = ''
            runHook preBuild
            # Install dependencies from package.json into the Nix-managed environment
            npm install
            # Run the Vite build script
            npm run build
            runHook postBuild
          '';

          # Phase 2: Copy the built assets to the output directory
          installPhase = ''
            runHook preInstall
            cp -r dist $out
            runHook postInstall
          '';
        };

        # A development shell, accessible via `nix develop`
        devShells.default = pkgs.mkShell {
          # Tools and libraries available in the development shell
          buildInputs = [
            pkgs.nodejs
            # Add other dev tools here, e.g., pkgs.git
          ];

          # Environment setup for the development shell
          shellHook = ''
            export PATH="${nodeDependencies.nodeDependencies}/bin:$PATH"
            export NODE_PATH="${nodeDependencies.nodeDependencies}/lib/node_modules:$NODE_PATH"
            echo "âœ… Vite dev environment ready!"
          '';
        };
      }
    );
}